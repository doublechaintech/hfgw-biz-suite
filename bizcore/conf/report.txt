
@warning object definition: hyperledger_network: word 'hyperledger' seems not found in library
@warning organization.mspid: word 'mspid' seems not found in library
@warning node.tls_cacert: word 'tls' seems not found in library
@warning node.tls_cacert: word 'cacert' seems not found in library
@warning object definition: grpc_option: word 'grpc' seems not found in library



=================Execute Report (Model Time 700101T0800) @Fri Dec 06 10:53:38 CST 2019, 31 objects and 226 fields===========================



 processing: hyperledger_network


 processing: organization


 processing: organization.hyperledger_network.network

Info: Add virtual field [organizations(es)] to <hyperledger_network>
	organization.network


 processing: node_type


 processing: node_type.hyperledger_network.network

Info: Add virtual field [node_types(es)] to <hyperledger_network>
	node_type.network


 processing: node


 processing: node.organization.organization

Info: Add virtual field [nodes(es)] to <organization>
	node.organization


 processing: node.channel.channel

Info: Add virtual field [nodes(es)] to <channel>
	node.channel


 processing: node.hyperledger_network.network

Info: Add virtual field [nodes(es)] to <hyperledger_network>
	node.network


 processing: node.node_type.type

Info: Add virtual field [nodes(es)] to <node_type>
	node.type


 processing: grpc_option


 processing: grpc_option.node.node

Info: Add virtual field [grpc_options(es)] to <node>
	grpc_option.node


 processing: channel


 processing: channel.hyperledger_network.network

Info: Add virtual field [channels(es)] to <hyperledger_network>
	channel.network


 processing: peer_role


 processing: peer_role.hyperledger_network.network

Info: Add virtual field [peer_roles(es)] to <hyperledger_network>
	peer_role.network


 processing: channel_peer_role


 processing: channel_peer_role.channel.channel

Info: Add virtual field [channel_peer_roles(es)] to <channel>
	channel_peer_role.channel


 processing: channel_peer_role.node.node

Info: Add virtual field [channel_peer_roles(es)] to <node>
	channel_peer_role.node


 processing: channel_peer_role.peer_role.peer_role

Info: Add virtual field [channel_peer_roles(es)] to <peer_role>
	channel_peer_role.peer_role


 processing: chain_code


 processing: chain_code.channel.channel

Info: Add virtual field [chain_codes(es)] to <channel>
	chain_code.channel


 processing: application


 processing: application.channel.channel

Info: Add virtual field [applications(es)] to <channel>
	application.channel


 processing: application.hyperledger_network.network

Info: Add virtual field [applications(es)] to <hyperledger_network>
	application.network


 processing: service_record


 processing: service_record.channel.channel

Info: Add virtual field [service_records(es)] to <channel>
	service_record.channel


 processing: service_record.chain_code.chain_code

Info: Add virtual field [service_records(es)] to <chain_code>
	service_record.chain_code


 processing: service_record.application.app_client

Info: Add virtual field [service_records(es)] to <application>
	service_record.app_client


 processing: service_record.hyperledger_network.network

Info: Add virtual field [service_records(es)] to <hyperledger_network>
	service_record.network


 processing: service_record.transaction_status.status

Info: Add virtual field [service_records(es)] to <transaction_status>
	service_record.status


 processing: transaction_status


 processing: transaction_status.hyperledger_network.network

Info: Add virtual field [transaction_statuss(es)] to <hyperledger_network>
	transaction_status.network


 processing: change_request_type


 processing: change_request_type.hyperledger_network.network

Info: Add virtual field [change_request_types(es)] to <hyperledger_network>
	change_request_type.network


 processing: change_request


 processing: change_request.change_request_type.request_type

Info: Add virtual field [change_requests(es)] to <change_request_type>
	change_request.request_type


 processing: change_request.hyperledger_network.network

Info: Add virtual field [change_requests(es)] to <hyperledger_network>
	change_request.network


 processing: chain_code_invoker


 processing: chain_code_invoker.application.app_client

Info: Add virtual field [chain_code_invokers(es)] to <application>
	chain_code_invoker.app_client


 processing: chain_code_invoker.chain_code.chain_code

Info: Add virtual field [chain_code_invokers(es)] to <chain_code>
	chain_code_invoker.chain_code


 processing: chain_code_invoker.change_request.change_request

Info: Add virtual field [chain_code_invokers(es)] to <change_request>
	chain_code_invoker.change_request


**************************************************

hyperledger_network{
	fields(4){
		string	id('ABCD'), verb: false, required: true;
		string	name('Hyperledger Fabric 应用网关'), verb: false, required: true;
		string_longtext	description('text()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(10){
		organizationList	network(__no_group)--network;
		nodeTypeList	network(__no_group)--network;
		nodeList	network(__no_group)--network;
		channelList	network(__no_group)--network;
		peerRoleList	network(__no_group)--network;
		applicationList	network(__no_group)--network;
		serviceRecordList	network(__no_group)--network;
		transactionStatusList	network(__no_group)--network;
		changeRequestTypeList	network(__no_group)--network;
		changeRequestList	network(__no_group)--network;
	}
} depth=0; isRoot = true

organization{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('doublechaintech'), verb: false, required: true;
		string	mspid('doublechaintech'), verb: false, required: true;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: organizationList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		nodeList	organization(__no_group)--organization;
	}
} depth=1; isRoot = false

node_type{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('peer|orderer'), verb: false, required: true;
		string	code('peer|orderer'), verb: false, required: true;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: nodeTypeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		nodeList	type(__no_group)--type;
	}
} depth=1; isRoot = false

node{
	fields(12){
		string	id('ABCD'), verb: false, required: true;
		string	name('skynet-peer|skynet-orderer'), verb: false, required: true;
		string	url('grpcs://www.skynet-peer.skynet.com:7051|grpcs://www.skynet-orderer.skynet.com:7050'), verb: false, required: true;
		organization	organization('$(object)'), verb: false, required: true, referenceBy: nodeList;
		channel	channel('$(object)'), verb: false, required: true, referenceBy: nodeList;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: nodeList;
		string_longtext	tls_cacert('text()'), verb: false, required: true;
		node_type	type('$(object)'), verb: false, required: true, referenceBy: nodeList;
		string	address('北京市建国门内大街100号'), verb: false, required: true;
		string	contact_person('张三'), verb: false, required: true;
		string	contact_telephone('010-9998880'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		grpcOptionList	node(__no_group)--node;
		channelPeerRoleList	node(__no_group)--node;
	}
} depth=2; isRoot = false

grpc_option{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	parameter_name('optionkey'), verb: false, required: true;
		string	parameter_value('optionValue'), verb: false, required: true;
		node	node('$(object)'), verb: false, required: true, referenceBy: grpcOptionList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

channel{
	fields(4){
		string	id('ABCD'), verb: false, required: true;
		string	name('channelname'), verb: false, required: true;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: channelList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(5){
		nodeList	channel(__no_group)--channel;
		channelPeerRoleList	channel(__no_group)--channel;
		chainCodeList	channel(__no_group)--channel;
		applicationList	channel(__no_group)--channel;
		serviceRecordList	channel(__no_group)--channel;
	}
} depth=1; isRoot = false

peer_role{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('endorsingPeer|chaincodeQuery|ledgerQuery|eventSource|discover'), verb: false, required: true;
		string	code('endorsingPeer|chaincodeQuery|ledgerQuery|eventSource|discover'), verb: false, required: true;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: peerRoleList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		channelPeerRoleList	peer_role(__no_group)--peer_role;
	}
} depth=1; isRoot = false

channel_peer_role{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		channel	channel('$(object)'), verb: false, required: true, referenceBy: channelPeerRoleList;
		node	node('$(object)'), verb: false, required: true, referenceBy: channelPeerRoleList;
		peer_role	peer_role('$(object)'), verb: false, required: true, referenceBy: channelPeerRoleList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

chain_code{
	fields(6){
		string	id('ABCD'), verb: false, required: true;
		string	name('sacc:1'), verb: false, required: true;
		string	code_name('sacc'), verb: false, required: true;
		string	code_version('1|v1'), verb: false, required: true;
		channel	channel('$(object)'), verb: false, required: true, referenceBy: chainCodeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		serviceRecordList	chain_code(__no_group)--chain_code;
		chainCodeInvokerList	chain_code(__no_group)--chain_code;
	}
} depth=2; isRoot = false

application{
	fields(9){
		string	id('ABCD'), verb: false, required: true;
		string	name('生态环境处应用2|水环境管理处节点应用3|科技与国际合作处应用4'), verb: false, required: true;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		string	mspid('skynet|doublechaintech'), verb: false, required: true;
		string_longtext	public_key('text()'), verb: false, required: true;
		string_longtext	private_key('text()'), verb: false, required: true;
		channel	channel('$(object)'), verb: false, required: true, referenceBy: applicationList;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: applicationList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		serviceRecordList	app_client(__no_group)--app_client;
		chainCodeInvokerList	app_client(__no_group)--app_client;
	}
} depth=2; isRoot = false

service_record{
	fields(14){
		string	id('ABCD'), verb: false, required: true;
		string	transaction_id('a21fe3srw'), verb: false, required: true;
		string	name('调用链码|网络管理'), verb: false, required: true;
		string_longtext	payload('text()'), verb: false, required: true;
		channel	channel('$(object)'), verb: false, required: true, referenceBy: serviceRecordList;
		chain_code	chain_code('$(object)'), verb: false, required: true, referenceBy: serviceRecordList;
		string	chain_code_function('transact'), verb: false, required: true;
		string	block_id('a21fe3srw'), verb: false, required: true;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		application	app_client('$(object)'), verb: false, required: true, referenceBy: serviceRecordList;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: serviceRecordList;
		string_longtext	response('text()'), verb: false, required: true;
		transaction_status	status('$(object)'), verb: false, required: true, referenceBy: serviceRecordList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

transaction_status{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('new|endorsed|committed|rejected'), verb: false, required: true;
		string	code('new|endorsed|committed|rejected'), verb: false, required: true;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: transactionStatusList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		serviceRecordList	status(__no_group)--status;
	}
} depth=1; isRoot = false

change_request_type{
	fields(9){
		string	id('ABCD'), verb: false, required: true;
		string	name('证书健康状况检测|节点健康状况检测|证书更新|节点角色管理|调用链码发起交易|调用链码查询账本|查看账本交易'), verb: false, required: true;
		string	code('CERT_CHECKER|NODE_CHECKER|CERT_UPDATER|NODE_ROLE_MANAGER|CC_INVOKER|CC_QUERIER|LEDGER_QUERIER'), verb: false, required: true;
		string	icon('upload|edit|edit|edit|edit|edit|edit'), verb: false, required: true;
		int	display_order('1|2|3|4|5|6|7'), verb: false, required: true;
		string_longtext	bind_types('text()'), verb: false, required: true;
		string_longtext	step_configuration('text()'), verb: false, required: true;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: changeRequestTypeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		changeRequestList	request_type(__no_group)--request_type;
	}
} depth=1; isRoot = false

change_request{
	fields(7){
		string	id('ABCD'), verb: false, required: true;
		string	name('存款|转账|取款'), verb: false, required: true;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		string_client_ip	remote_ip('remoteIp()'), verb: false, required: true;
		change_request_type	request_type('$(object)'), verb: false, required: true, referenceBy: changeRequestList;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: changeRequestList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		chainCodeInvokerList	change_request(__no_group)--change_request;
	}
} depth=2; isRoot = false

chain_code_invoker{
	fields(6){
		string	id('ABCD'), verb: false, required: true;
		application	app_client('$(object)'), verb: false, required: true, referenceBy: chainCodeInvokerList;
		chain_code	chain_code('$(object)'), verb: false, required: true, referenceBy: chainCodeInvokerList;
		string_longtext	parameters('text()'), verb: false, required: true;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: chainCodeInvokerList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

hyperledger_network{
	fields(4){
		string	id('ABCD'), verb: false, required: true;
		string	name('Hyperledger Fabric 应用网关'), verb: false, required: true;
		string_longtext	description('text()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(10){
		organizationList	network(__no_group)--network;
		nodeTypeList	network(__no_group)--network;
		nodeList	network(__no_group)--network;
		channelList	network(__no_group)--network;
		peerRoleList	network(__no_group)--network;
		applicationList	network(__no_group)--network;
		serviceRecordList	network(__no_group)--network;
		transactionStatusList	network(__no_group)--network;
		changeRequestTypeList	network(__no_group)--network;
		changeRequestList	network(__no_group)--network;
	}
} depth=0; isRoot = true

organization{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('doublechaintech'), verb: false, required: true;
		string	mspid('doublechaintech'), verb: false, required: true;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: organizationList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		nodeList	organization(__no_group)--organization;
	}
} depth=1; isRoot = false

node_type{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('peer|orderer'), verb: false, required: true;
		string	code('peer|orderer'), verb: false, required: true;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: nodeTypeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		nodeList	type(__no_group)--type;
	}
} depth=1; isRoot = false

node{
	fields(12){
		string	id('ABCD'), verb: false, required: true;
		string	name('skynet-peer|skynet-orderer'), verb: false, required: true;
		string	url('grpcs://www.skynet-peer.skynet.com:7051|grpcs://www.skynet-orderer.skynet.com:7050'), verb: false, required: true;
		organization	organization('$(object)'), verb: false, required: true, referenceBy: nodeList;
		channel	channel('$(object)'), verb: false, required: true, referenceBy: nodeList;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: nodeList;
		string_longtext	tls_cacert('text()'), verb: false, required: true;
		node_type	type('$(object)'), verb: false, required: true, referenceBy: nodeList;
		string	address('北京市建国门内大街100号'), verb: false, required: true;
		string	contact_person('张三'), verb: false, required: true;
		string	contact_telephone('010-9998880'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		grpcOptionList	node(__no_group)--node;
		channelPeerRoleList	node(__no_group)--node;
	}
} depth=2; isRoot = false

grpc_option{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	parameter_name('optionkey'), verb: false, required: true;
		string	parameter_value('optionValue'), verb: false, required: true;
		node	node('$(object)'), verb: false, required: true, referenceBy: grpcOptionList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

channel{
	fields(4){
		string	id('ABCD'), verb: false, required: true;
		string	name('channelname'), verb: false, required: true;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: channelList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(5){
		nodeList	channel(__no_group)--channel;
		channelPeerRoleList	channel(__no_group)--channel;
		chainCodeList	channel(__no_group)--channel;
		applicationList	channel(__no_group)--channel;
		serviceRecordList	channel(__no_group)--channel;
	}
} depth=1; isRoot = false

peer_role{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('endorsingPeer|chaincodeQuery|ledgerQuery|eventSource|discover'), verb: false, required: true;
		string	code('endorsingPeer|chaincodeQuery|ledgerQuery|eventSource|discover'), verb: false, required: true;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: peerRoleList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		channelPeerRoleList	peer_role(__no_group)--peer_role;
	}
} depth=1; isRoot = false

channel_peer_role{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		channel	channel('$(object)'), verb: false, required: true, referenceBy: channelPeerRoleList;
		node	node('$(object)'), verb: false, required: true, referenceBy: channelPeerRoleList;
		peer_role	peer_role('$(object)'), verb: false, required: true, referenceBy: channelPeerRoleList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

chain_code{
	fields(6){
		string	id('ABCD'), verb: false, required: true;
		string	name('sacc:1'), verb: false, required: true;
		string	code_name('sacc'), verb: false, required: true;
		string	code_version('1|v1'), verb: false, required: true;
		channel	channel('$(object)'), verb: false, required: true, referenceBy: chainCodeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		serviceRecordList	chain_code(__no_group)--chain_code;
		chainCodeInvokerList	chain_code(__no_group)--chain_code;
	}
} depth=2; isRoot = false

application{
	fields(9){
		string	id('ABCD'), verb: false, required: true;
		string	name('生态环境处应用2|水环境管理处节点应用3|科技与国际合作处应用4'), verb: false, required: true;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		string	mspid('skynet|doublechaintech'), verb: false, required: true;
		string_longtext	public_key('text()'), verb: false, required: true;
		string_longtext	private_key('text()'), verb: false, required: true;
		channel	channel('$(object)'), verb: false, required: true, referenceBy: applicationList;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: applicationList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		serviceRecordList	app_client(__no_group)--app_client;
		chainCodeInvokerList	app_client(__no_group)--app_client;
	}
} depth=2; isRoot = false

service_record{
	fields(14){
		string	id('ABCD'), verb: false, required: true;
		string	transaction_id('a21fe3srw'), verb: false, required: true;
		string	name('调用链码|网络管理'), verb: false, required: true;
		string_longtext	payload('text()'), verb: false, required: true;
		channel	channel('$(object)'), verb: false, required: true, referenceBy: serviceRecordList;
		chain_code	chain_code('$(object)'), verb: false, required: true, referenceBy: serviceRecordList;
		string	chain_code_function('transact'), verb: false, required: true;
		string	block_id('a21fe3srw'), verb: false, required: true;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		application	app_client('$(object)'), verb: false, required: true, referenceBy: serviceRecordList;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: serviceRecordList;
		string_longtext	response('text()'), verb: false, required: true;
		transaction_status	status('$(object)'), verb: false, required: true, referenceBy: serviceRecordList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

transaction_status{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('new|endorsed|committed|rejected'), verb: false, required: true;
		string	code('new|endorsed|committed|rejected'), verb: false, required: true;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: transactionStatusList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		serviceRecordList	status(__no_group)--status;
	}
} depth=1; isRoot = false

change_request_type{
	fields(9){
		string	id('ABCD'), verb: false, required: true;
		string	name('证书健康状况检测|节点健康状况检测|证书更新|节点角色管理|调用链码发起交易|调用链码查询账本|查看账本交易'), verb: false, required: true;
		string	code('CERT_CHECKER|NODE_CHECKER|CERT_UPDATER|NODE_ROLE_MANAGER|CC_INVOKER|CC_QUERIER|LEDGER_QUERIER'), verb: false, required: true;
		string	icon('upload|edit|edit|edit|edit|edit|edit'), verb: false, required: true;
		int	display_order('1|2|3|4|5|6|7'), verb: false, required: true;
		string_longtext	bind_types('text()'), verb: false, required: true;
		string_longtext	step_configuration('text()'), verb: false, required: true;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: changeRequestTypeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		changeRequestList	request_type(__no_group)--request_type;
	}
} depth=1; isRoot = false

change_request{
	fields(7){
		string	id('ABCD'), verb: false, required: true;
		string	name('存款|转账|取款'), verb: false, required: true;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		string_client_ip	remote_ip('remoteIp()'), verb: false, required: true;
		change_request_type	request_type('$(object)'), verb: false, required: true, referenceBy: changeRequestList;
		hyperledger_network	network('$(object)'), verb: false, required: true, referenceBy: changeRequestList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		chainCodeInvokerList	change_request(__no_group)--change_request;
	}
} depth=2; isRoot = false

chain_code_invoker{
	fields(6){
		string	id('ABCD'), verb: false, required: true;
		application	app_client('$(object)'), verb: false, required: true, referenceBy: chainCodeInvokerList;
		chain_code	chain_code('$(object)'), verb: false, required: true, referenceBy: chainCodeInvokerList;
		string_longtext	parameters('text()'), verb: false, required: true;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: chainCodeInvokerList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

user_domain{
	fields(3){
		string	id('ABCD'), verb: false, required: true;
		string	name('用户区域'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		userWhiteListList	domain(__no_group)--domain;
		secUserList	domain(__no_group)--domain;
	}
} depth=0; isRoot = true

user_white_list{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	user_identity('clariones|13808188512'), verb: false, required: true;
		string	user_special_functions('tester;ios-spokesperson'), verb: false, required: true;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: userWhiteListList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

sec_user{
	fields(14){
		string	id('ABCD'), verb: false, required: true;
		string	login('login'), verb: false, required: true;
		string_china_mobile_phone	mobile('13900000001'), verb: false, required: true;
		string_email	email('suddy_chang@163.com'), verb: false, required: true;
		string_password	pwd('*******'), verb: false, required: true;
		string	weixin_openid('wx123456789abcdefghijklmn'), verb: false, required: true;
		string	weixin_appid('wxapp12098410239840'), verb: false, required: true;
		string	access_token('jwt_token_12345678'), verb: false, required: true;
		int	verification_code('0|9999999'), verb: false, required: true;
		date_time	verification_code_expire('2099-12-31T09:09:09'), verb: false, required: true;
		date_time	last_login_time('2099-12-31T09:09:09'), verb: false, required: true;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: secUserList;
		sec_user_blocking	blocking('$(object)'), verb: false, required: true, referenceBy: secUserList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		userAppList	sec_user(__no_group)--sec_user;
		loginHistoryList	sec_user(__no_group)--sec_user;
	}
} depth=1; isRoot = false

sec_user_blocking{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	who('currentUser()'), verb: false, required: true;
		date_time_create	block_time('createTime()'), verb: false, required: true;
		string	comments('这个用户多次发送违反社区的帖子，现在把他给屏蔽了'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		secUserList	blocking(__no_group)--blocking;
	}
} depth=0; isRoot = true

user_app{
	fields(10){
		string	id('ABCD'), verb: false, required: true;
		string	title('审车平台|账户管理|接车公司|审车公司|维修公司|顾客'), verb: false, required: true;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: userAppList;
		string	app_icon('users|bank|wechat|bar-chart|user|users'), verb: false, required: true;
		bool	full_access('true'), verb: false, required: true;
		string	permission('MXWR|MXWR'), verb: false, required: true;
		string	object_type('CarInspectionPlatform|UserDomain|CarReceivingServiceCompany|CarInspectionServiceCompany|CarRepairingServiceCompany|CustomerInfo'), verb: false, required: true;
		string	object_id('CIP000001|UD000001|CRSC000001|CISC000001|CRSC000001|CI000001'), verb: false, required: true;
		string	location('/link/to/app'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		quickLinkList	app(__no_group)--app;
		listAccessList	app(__no_group)--app;
		objectAccessList	app(__no_group)--app;
	}
} depth=2; isRoot = false

quick_link{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		string	name('列表'), verb: false, required: true;
		string	icon('facebook|google'), verb: false, required: true;
		string_image	image_path('y-200-200-red.jpg'), verb: false, required: true;
		string	link_target('列表'), verb: false, required: true;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: quickLinkList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

list_access{
	fields(10){
		string	id('ABCD'), verb: false, required: true;
		string	name('列表'), verb: false, required: true;
		string	internal_name('levelOneCategoryList'), verb: false, required: true;
		bool	read_permission('true'), verb: false, required: true;
		bool	create_permission('true'), verb: false, required: true;
		bool	delete_permission('true'), verb: false, required: true;
		bool	update_permission('true'), verb: false, required: true;
		bool	execution_permission('true'), verb: false, required: true;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: listAccessList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

object_access{
	fields(14){
		string	id('ABCD'), verb: false, required: true;
		string	name('控制访问列表1'), verb: false, required: true;
		string	object_type('FranchiseeStoreCountryCenter|AccountSet'), verb: false, required: true;
		string	list1('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list2('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list3('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list4('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list5('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list6('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list7('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list8('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list9('catalogList|levelOneCategoryList'), verb: false, required: true;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: objectAccessList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

login_history{
	fields(6){
		string	id('ABCD'), verb: false, required: true;
		date_time_create	login_time('createTime()'), verb: false, required: true;
		string	from_ip('192.168.1.1|192.168.1.2'), verb: false, required: true;
		string	description('登陆成功'), verb: false, required: true;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: loginHistoryList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

generic_form{
	fields(4){
		string	id('ABCD'), verb: false, required: true;
		string	title('登记输入单'), verb: false, required: true;
		string	description('姓名就是你身份证上的名字'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(4){
		formMessageList	form(__no_group)--form;
		formFieldMessageList	form(__no_group)--form;
		formFieldList	form(__no_group)--form;
		formActionList	form(__no_group)--form;
	}
} depth=0; isRoot = true

form_message{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	title('字段组合错误'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formMessageList;
		string	level('success|info|warning|danger'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

form_field_message{
	fields(6){
		string	id('ABCD'), verb: false, required: true;
		string	title('输入错误'), verb: false, required: true;
		string	parameter_name('name'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formFieldMessageList;
		string	level('success|info|warning|danger'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

form_field{
	fields(18){
		string	id('ABCD'), verb: false, required: true;
		string	label('姓名|年龄|出生地|国籍'), verb: false, required: true;
		string	locale_key('name|age|birth_place|country'), verb: false, required: true;
		string	parameter_name('name'), verb: false, required: true;
		string	type('text|longtext|date|date_time|money|url|image|password|number|switch|vcode'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formFieldList;
		string	placeholder('姓名就是你身份证上的名字'), verb: false, required: true;
		string	default_value('李一一'), verb: false, required: true;
		string	description('姓名就是你身份证上的名字'), verb: false, required: true;
		string	field_group('基础信息|扩展信息'), verb: false, required: true;
		string	minimum_value('maybe any value'), verb: false, required: true;
		string	maximum_value('a value expression'), verb: false, required: true;
		bool	required('true|false'), verb: false, required: true;
		bool	disabled('true|false'), verb: false, required: true;
		bool	custom_rendering('false'), verb: false, required: true;
		string	candidate_values('|||男,女|高,矮'), verb: false, required: false;
		string	suggest_values('|||男,女|高,矮'), verb: false, required: false;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

form_action{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		string	label('功能'), verb: false, required: true;
		string	locale_key('name'), verb: false, required: true;
		string	action_key('save|update|remove'), verb: false, required: true;
		string	level('default|warning|danger|primary'), verb: false, required: true;
		string	url('genericFormManager/name/name0002/name0003/'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formActionList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

candidate_container{
	fields(3){
		string	id('ABCD'), verb: false, required: true;
		string	name('我只是一个容器'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		candidateElementList	container(__no_group)--container;
	}
} depth=0; isRoot = true

candidate_element{
	fields(6){
		string	id('ABCD'), verb: false, required: true;
		string	name('搜索到的匹配字段'), verb: false, required: true;
		string	type('类型描述'), verb: false, required: true;
		string_image	image('1.jpg'), verb: false, required: true;
		candidate_container	container('$(object)'), verb: false, required: true, referenceBy: candidateElementList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false




=================================End Report=================================



